error[E0277]: `PhantomPinned` cannot be unpinned
  --> $DIR/proper_unpin.rs:34:5
   |
31 | fn is_unpin<T: Unpin>() {}
   |                ----- required by this bound in `is_unpin`
...
34 |     is_unpin::<Foo<PhantomPinned, ()>>(); //~ ERROR E0277
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ within `_::__Origin<'_, PhantomPinned, ()>`, the trait `Unpin` is not implemented for `PhantomPinned`
   |
   = note: required because it appears within the type `Inner<PhantomPinned>`
   = note: required because it appears within the type `_::__Origin<'_, PhantomPinned, ()>`
   = note: required because of the requirements on the impl of `Unpin` for `Foo<PhantomPinned, ()>`

error[E0277]: `PhantomPinned` cannot be unpinned
  --> $DIR/proper_unpin.rs:36:5
   |
31 | fn is_unpin<T: Unpin>() {}
   |                ----- required by this bound in `is_unpin`
...
36 |     is_unpin::<Foo<PhantomPinned, PhantomPinned>>(); //~ ERROR E0277
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ within `_::__Origin<'_, PhantomPinned, PhantomPinned>`, the trait `Unpin` is not implemented for `PhantomPinned`
   |
   = note: required because it appears within the type `Inner<PhantomPinned>`
   = note: required because it appears within the type `_::__Origin<'_, PhantomPinned, PhantomPinned>`
   = note: required because of the requirements on the impl of `Unpin` for `Foo<PhantomPinned, PhantomPinned>`

error[E0277]: `PhantomPinned` cannot be unpinned
  --> $DIR/proper_unpin.rs:38:5
   |
31 | fn is_unpin<T: Unpin>() {}
   |                ----- required by this bound in `is_unpin`
...
38 |     is_unpin::<TrivialBounds>(); //~ ERROR E0277
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ within `_::__Origin<'_>`, the trait `Unpin` is not implemented for `PhantomPinned`
   |
   = note: required because it appears within the type `_::__Origin<'_>`
   = note: required because of the requirements on the impl of `Unpin` for `TrivialBounds`
